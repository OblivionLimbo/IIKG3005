1
00:00:00,000 --> 00:00:05,000
Okay, we're back in VS Code. Now we're going to go through and build some more resources.

2
00:00:05,000 --> 00:00:10,500
And build further on our infrastructure, because now we have our resource group, we have our VNet, we have our subnet.

3
00:00:10,500 --> 00:00:16,600
So now we're going to build a security, network security group, which will be added onto the subnet.

4
00:00:16,600 --> 00:00:27,200
Because we want to build a virtual machine afterwards, and then we want to use the security group to block or only allow, for example, my private or my public IP address.

5
00:00:27,200 --> 00:00:38,800
This is the only one that is allowed to connect to the machine, because if you install an Azure thing that is open to the whole world, it doesn't take long before you notice that this is open for RDP, or this is open for SSH.

6
00:00:38,800 --> 00:00:46,200
And then there will be many who will try to log on to this with brute force, and if you have a weak password, then this will be cracked pretty quickly.

7
00:00:46,200 --> 00:00:53,600
And then the machine can become part of a distributed denial of service botnet, which we absolutely do not want.

8
00:00:53,600 --> 00:01:10,200
Not that it's a topic for the rest of us, since we tear this infrastructure quickly after each time we're done, but it's at least a security measure you should take and be aware of that you have to go through and do to ensure that your infrastructure is secure.

9
00:01:10,200 --> 00:01:17,200
But this is just a test project, we're going through some infrastructure with Terraform, so we'll do it that way.

10
00:01:17,200 --> 00:01:28,200
We only allow my official IP address, which is allowed to enter there. You have to find out your official address by going to whatismyipaddress.com, and then find the one you want to enter, but we'll come to that and show it.

11
00:01:28,200 --> 00:01:46,200
We start by going to documentation, we go to registry.terraform.io, as we did last time. Here we choose Browse Providers, choose Azure, go to documentation, and then we can search here Network Security Group.

12
00:01:46,200 --> 00:01:52,200
Then we see here Resources, Security Group, Security Rule, and Security Group Association, because we have to add it onto the subnet.

13
00:01:52,200 --> 00:02:02,200
We start with the Security Group, and then we see here under our example, right here we have the Resource Group, and here we have a resource that is for Network Security Group.

14
00:02:02,200 --> 00:02:11,200
We could of course write it, but if we take it with us now into VS Code, then we can see how we can simply just copy the information in from the documentation.

15
00:02:11,200 --> 00:02:17,200
We remember as before, Resources, Azure, RM Network Security Group, it's another name for the resource, we can't change it.

16
00:02:17,200 --> 00:02:30,200
Here we can write, for example, NSG Demo, which is the alias for this Security Group, give it a name, NSG SN01 Demo, just because it's going to be added onto subnet 01.

17
00:02:30,200 --> 00:02:41,200
Location, when we take and copy here, we see that it comes with example and location, so if we take this one away, then we see that we get ours, so we can write location.

18
00:02:41,200 --> 00:02:50,200
In the same way with Resource Group, we take a dot down here, and then we take a name. Then we have all the information that is correct here.

19
00:02:50,200 --> 00:02:53,200
We have location of the Resource Group, we have a Resource Group name.

20
00:02:53,200 --> 00:03:03,200
Then we come to the Security Group, as we have seen, and then we can say that, okay, we can call the rule for Allow, we can write public IP.

21
00:03:03,200 --> 00:03:11,200
The priority is the rule, or the numbering it comes on, the higher the number, it will be from 100 to 4090-something.

22
00:03:11,200 --> 00:03:20,200
Of course, if you have, it's important to think about how to place it in the rule, because if you have a rule that gets a hit before another, that rule will take effect first.

23
00:03:20,200 --> 00:03:28,200
So, for example, if we get a rule that does not allow it, then it will be valid, and it will never come down to the one that allows it, for example.

24
00:03:28,200 --> 00:03:36,200
Then we say here that we take it, it should be inbound, that is, into this subnet and this Network Security Group.

25
00:03:36,200 --> 00:03:42,200
Allow, protocol TCP, we're going to test if it's RDP or SSH, it doesnt play such a big role.

26
00:03:42,200 --> 00:03:56,200
Source Port Range, we can specify, for example, whether it should be 22 or 3389, but if we just let it be the stars, then it takes all, and then we will be able to define what addresses are allowed to be connected.

27
00:03:56,200 --> 00:04:06,200
Destination Port Range, that's where you're allowed to connect, because in this Network Security Group, it can be on a subnet that has many machines on the inside,

28
00:04:06,200 --> 00:04:13,200
then it may just be necessary to define what machine, this rule, should be valid for, that is, who you want to try to contact.

29
00:04:13,200 --> 00:04:19,200
Because then we can say, okay, try to contact a web service here, then everyone is allowed to try to contact someone else, then no, then no one is allowed.

30
00:04:19,200 --> 00:04:21,200
Source Address Prefix, here we can add something.

31
00:04:21,200 --> 00:04:33,200
With Source Address Prefix, yes, it would then say what this address is, what the address is trying to connect to, and then it would be my private address,

32
00:04:33,200 --> 00:04:37,200
and then you can go to whatismyipaddress.com and then you get that.

33
00:04:37,200 --> 00:04:41,200
Destination Address Prefix would be the address for my attempt to connect to.

34
00:04:41,200 --> 00:04:49,200
Tags, just remove it in the first round, then we see something like this, and then we have to remember that now we have to add the IP address, which is the public address.

35
00:04:49,200 --> 00:04:51,200
So then we can go.

36
00:04:51,200 --> 00:04:55,200
So if I go to whatismyipaddress and find it, I just take it with me with that address.

37
00:04:55,200 --> 00:04:58,200
Then I enter it in Source.

38
00:04:58,200 --> 00:05:04,200
Here we could have had, for example, if I had a larger network, then we could include the whole network.

39
00:05:04,200 --> 00:05:10,200
And there is also the possibility to also set, for example, commas to allow more IP addresses.

40
00:05:10,200 --> 00:05:12,200
So here we have Destination Address Prefix.

41
00:05:12,200 --> 00:05:19,200
We don't need to define anything for everyone, but we could later specify what the machine should be.

42
00:05:19,200 --> 00:05:27,200
And then we are on the next resource that we will have with us, and that is Group Association.

43
00:05:27,200 --> 00:05:34,200
Then we see here, here it is Network Subnet, Network Security Group, Security Rule, and here we have Association.

44
00:05:34,200 --> 00:05:47,200
We just take it with us, paste it in, and then we see here that we must have Subnet ID, and then we have to, let's see, we take this demo ID, because then we get to know that it is set up.

45
00:05:47,200 --> 00:05:54,200
In addition, we also have Network Security Group, which we then take NSG.ID.

46
00:05:54,200 --> 00:05:58,200
So, then the Azure Subnet Network Security Group Association again, 

47
00:05:58,200 --> 00:06:01,200
take effect after we have created the security group.

48
00:06:01,200 --> 00:06:07,200
And then it will add the subnet ID when the subnet is set up.

49
00:06:07,200 --> 00:06:22,200
If I just save the file, I can now run a, let's see, if we then take a Terraform plan, let's see, out, NSG plan.tf plan.

50
00:06:22,200 --> 00:06:29,200
We run it in just to plan that we have resources, and then we take it with us to operate the virtual machine afterwards.

51
00:06:29,200 --> 00:06:42,200
And when we have run the plan, then we see that we get an overview of what resources should be created, and then we have here Security Rule, and Security Group Association, and Network Security Group, and so on.

52
00:06:42,200 --> 00:06:51,200
And then we see here Plan 2 to add, then we just run Terraform, apply, and then we take NSG plan.tf.

53
00:06:52,200 --> 00:06:56,200


54
00:06:56,200 --> 00:07:00,200
My mistake, writing error

55
00:07:00,200 --> 00:07:03,200
Then we run through here, apply, and deploy these resources.

56
00:07:03,200 --> 00:07:06,200
Then we will now create the machine and test that we get connected to it.

57
00:07:06,200 --> 00:07:09,200
Okay, then the resources are created.

58
00:07:09,200 --> 00:07:15,200
Then we are getting started with building up a fairly simple and nice infrastructure.

59
00:07:15,200 --> 00:07:23,200
Then of course we must have some of the resources that should run on the inside here, and then we can very well find that we are going to build a virtual machine that will be part of this infrastructure.

60
00:07:23,200 --> 00:07:26,200
So then we just go to the documentation we need.

61
00:07:26,200 --> 00:07:30,200
Instead of Network Security, we write Virtual Machine.

62
00:07:30,200 --> 00:07:44,200
So now we can see here that we have, if we go to azurerm_virtual_machine, then we want to see here that ut has been superseded, so it will be outgoing, because it will be replaced by azurerm_linux_virtual_machine and azurerm_windows_virtual_machine.

63
00:07:44,200 --> 00:07:57,200
And then it's okay to just take these at once, so that we can get familiar with the coming and future way to create the virtual machine instead of using the deprecated way.

64
00:07:57,200 --> 00:08:01,200
So then we can for example press here now, we think that, okay, we try a Linux virtual machine.

65
00:08:01,200 --> 00:08:05,200
And then we can see here that we get an example of how we can create it.

66
00:08:06,200 --> 00:08:12,200
We can scroll through disclaimers, here we see that there are some notes, notes, notes in this register, and known issue with the public IP address.

67
00:08:12,200 --> 00:08:20,200
So we try a public IP address, we can see if we might encounter any of these challenges, and then we decide if we should do that.

68
00:08:20,200 --> 00:08:24,200
So what we can do then is that we are going to build a Linux machine.

69
00:08:24,200 --> 00:08:34,200
Here we see that we have our resource group, we have our network, we have our subnet, we do not have a network card, because we have to create that, we need a network card.

70
00:08:34,200 --> 00:08:50,200
We do not have a network card, and a virtual machine must have it, because a network card is a resource in Azure, and in addition we also need an IP address that we can use for this virtual machine.

71
00:08:50,200 --> 00:09:05,200
We can first make sure that we are going to set up an IP address, and then we can start by taking that we need the network interface, which is a resource for the virtual machine.

72
00:09:05,200 --> 00:09:20,200
And then we can take it into the VS code, we put it in here, and then we write for example, NIC demo, and then we can just write that this is going to be NIC demo-limux.

73
00:09:20,200 --> 00:09:32,200
And then we see here, for example, we have to remove that again, and then location, and then we take a name, IP configuration, internal, that's fine,

74
00:09:32,200 --> 00:09:44,200
Azure RMS subnet, we have to set it like that, ID, private IP address, location, dynamic, that's fine.

75
00:09:44,200 --> 00:09:56,200
Then we have to have a, we have to create our virtual machine, and here we see that it uses a public key for how we can log in to it.

76
00:09:56,200 --> 00:10:05,200
For the sake of simplicity, we also need to use it, we can see how we can do it with a user name password instead in this virtual machine.

77
00:10:05,200 --> 00:10:15,200
Oh, I almost forgot, we also have a public IP address, ID, but we haven't created it yet, so we have to create it first.

78
00:10:15,200 --> 00:10:33,200
So if we hover here now, write resource, Azure RM public IP, like that, and then we can write pip public IP demo, and then we write here name pip demo-limux.

79
00:10:33,200 --> 00:10:37,200
Of course we haven't had a numbering or anything like that, but we only have one we have to create.

80
00:10:37,200 --> 00:10:48,200
And then we also have to have more information here, so if we go back to the documentation, we take and write public IP, and then Azure public IP,

81
00:10:48,200 --> 00:10:56,200
we see here public IP, name, resource group, it must be inside for how, yes, it just has to know what resource group it's supposed to be in.

82
00:10:56,200 --> 00:11:14,200
We take and copy, like that, and then we see RG name, like that, then we have location, location, and then we have allocation method, and there we can write static or dynamic,

83
00:11:14,200 --> 00:11:22,200
we can write static now, then we get the same IP address every time we get on the machine, if we have dynamic, then we have to add a new IP address every time.

84
00:11:22,200 --> 00:11:31,200
It doesn't really matter alot, we can extract this IP address afterwards, which we have to do to get permission to, so to speak, when we add this resource on another resource,

85
00:11:31,200 --> 00:11:35,200
then it will get an address that we can collect afterwards, so we know how to connect to it.

86
00:11:35,200 --> 00:11:46,200
So then we have created this resource, then we have this one, and then we can write public IP address, and then we go to that one, and like that.

87
00:11:46,200 --> 00:11:57,200
Then we can deploy these resources here as well, or we can just throw the virtual machine at it at once, but as we said, we want to see how we can just use a username and password,

88
00:11:57,200 --> 00:12:02,200
SSH into a Linux machine with a username and password, then we let it run and run with the certificates.

89
00:12:02,200 --> 00:12:15,200
Then we can look back at the documentation for AzureRM Linux virtual machine, scroll down, then we see here that we are not going to add admin SSH key,

90
00:12:15,200 --> 00:12:22,200
but if you look here, here we have the following arguments that are supported, admin username, and then we scroll down, and then we come out to admin password,

91
00:12:22,200 --> 00:12:29,200
and what is important to remember when we come to admin password, when admin password is specified, disabled password authentication must be set to false,

92
00:12:29,200 --> 00:12:35,200
and that's because if not, it will not allow us to use any other password.

93
00:12:35,200 --> 00:12:41,200
And then we see that an admin password or admin SSH key must be specified, because it should be possible to log on this machine.

94
00:12:41,200 --> 00:12:51,200
So now we're trying to put together a version of this resource that will be username and password to log in.

95
00:12:51,200 --> 00:13:02,200
Then we go here, paste it in, then we see that it will be an Ubuntu server, here we can also see that admin SSH key, we don't want that with us,

96
00:13:02,200 --> 00:13:16,200
and then we can look here at the resources of admin username, then we can write admin password, then we can write something just to have a password that we are going to use,

97
00:13:16,200 --> 00:13:38,200
and then we can take and write the one we have to see there, we have to remember that, and then name, then oops, location, save it, then we can take a terraform format to get everything aligned,

98
00:13:38,200 --> 00:13:49,200
and then we remember from the documentation that if we were to use another password, then we must have disabled password authentication, it must be set to false,

99
00:13:49,200 --> 00:13:58,200
then it looks like we should have what we need in place to be able to deploy this virtual machine.

100
00:13:58,200 --> 00:14:09,200
It is not a good practice to have this text in clear text, but we do it for ease of use to test that it should be implemented.

101
00:14:09,200 --> 00:14:21,200
So then we now have the network interface, or first we have the public IP network interface, IPConfig network interface, and then we have to have here,

102
00:14:21,200 --> 00:14:34,200
let's see, network interface, let's see, network interface dot, machine network interface, and then what have we called it, yes we called it for NIC demo,

103
00:14:34,200 --> 00:14:52,200
so then it can not be an example, but we have to put it like that, then we can write terraform plan out nic vm tfplan, then we can see what it says, if it approves all the input we have come with,

104
00:14:52,200 --> 00:15:01,200
and when we run through our plan, then we see here now that it has three resources that we have to add, then we can scroll up and see what is put, yes network interface,

105
00:15:01,200 --> 00:15:17,200
then it is the virtual machine, and then we have an IP, public IP that will be used, IP address, known after apply, then we have to find it when we have added this resource to the machine,

106
00:15:17,200 --> 00:15:37,200
and it has been started up, then we want to see what we get, because it is a bit of an Azure function, it has no IP address as long as the machine is not running, and then it has to be put on, but then we run a terraform, apply, and then nic vm plan,

107
00:15:37,200 --> 00:15:47,200
then we just let it run up and update the resources, and then we want to see that here we have then been able to create all the resources that we have defined in our terraform plan,

108
00:15:47,200 --> 00:16:00,200
then we can quickly see in the Azure portal how it looks like, then I can see here now that I have my RG demo vnet, where I have also got all the resources, here is an example machine,

109
00:16:00,200 --> 00:16:19,200
here we can see I forgot to give the virtual machine a new name, and then we have our vnet, then we have the public address, so if I click on pip, the public IP now, then I can see here that I have a new IP address that I can connect to this machine,

110
00:16:19,200 --> 00:16:34,200
then we can see here, associated to, nic demo linux, virtual machine, example machine, my bad, I forgot to give it a new name, and then we can now see how you can get this information from the command line, so that you can get this public address,

111
00:16:34,200 --> 00:16:54,200
so now we just go to the vscode again, then we remember terraform, terraform state list, there we see, now we have our AzureRM linux machine, so then we can take terraform state show, we copy that with us,

112
00:16:54,200 --> 00:17:16,200
then we list out all the information there, so if we scroll up here, then we see there, public IP address, and then we have that available there, so then something will happen, so if we go back to the Azure portal, then we can see now that we have our NSG, so if we click on NSG, then we can see under inbound security rules, allow public IP,

113
00:17:16,200 --> 00:17:42,200
then we can see here that it is allowed, source range, any, any, and allow, so then we can see that we now, then if we click on terminal, if we use windows, then we can download putty, or something like that, to use SSH, and then we can, I can put a link in the description that makes it possible to download putty, but then we can write here now that I want SSH,

114
00:17:42,200 --> 00:18:04,200
and then we take, let's see, I took to change, I would of course have put a different user name there too, but like that, then we enter the public address there, like that, and then yes, and then we have to enter our password, that probably didn't work, let's see, there, then we are in,

115
00:18:04,200 --> 00:18:25,200
and now we see that now we have logged in a virtual machine in Azure with SSH, and it has only been allowed because the public address has been entered in the NSG, which means that it is allowed to enter, so if others try something against this IP address of the machine, then they would not enter, since they did not like the NSG as allowed to be linked.

116
00:18:25,200 --> 00:18:52,200
So if we say, for example, write something in config, just to see here, then we see here that this machine has a local address on 10.0.1.4, which mirrors the subnet it is on, we do not see the public address, no, because it is a mapping between the public address and the internal address, or the machine, or Azure, makes sure that when we connect to the public address, then we are connected to this Linux VM.

117
00:18:52,200 --> 00:19:18,200
So then we have set up a little fun infrastructure, we have a resource group, we have a VNet, we have a subnet, we have a network security group, we have a public IP address, we have a network interface, we have a virtual machine that has connected this network interface with this public IP address, and we have done this only with code, so we could deploy this as fast as possible, as many places as we wanted, just by changing different things, for example, there should be some other name or some place.

118
00:19:18,200 --> 00:19:36,200
So it is a very quick introduction to how we can deploy code via Terraform, infrastructure via code we use Terraform. Of course, we will look more at how we can use variables and the like to make this Terraform infrastructure more flexible.

119
00:19:36,200 --> 00:19:47,200
But as I said, we must always remember that now we have a part of the resources that are here, especially the virtual machine, if it is running here, then it is very stupid, because it will take away the resources.

120
00:19:47,200 --> 00:20:09,200
So now I'm done with my testing, now I've seen that I can get up all the network, I can get up my security resources, I can get up the virtual machine, and then I can run a Terraform destroy, as I told you before, we have Terraform apply destroy, which we can also use, or we can also just write destroy.

121
00:20:09,200 --> 00:20:32,200
If we write Terraform destroy now, then we will be prompted with, I'm sure you want to do this, and I do, because now I'm done with my testing, I just want to move and remove everything together, so I'm sure that this is not using any money, because then we have both the VM, the network security group, the public IP, and everything that is using money together.

122
00:20:32,200 --> 00:20:54,200
If we write yes, then we are going to scroll up there, then we see everything together, destroyed, destroyed, network destroyed, subnet destroyed, resource group, vnet will be destroyed, so then we can just write yes to that, then we let Terraform do the job of just removing everything here, so we don't have to think any more about it. Here it says 8 resources to be destroyed. Perfect!

123
00:20:54,200 --> 00:21:12,200
And after a little while, we will see that some of the resources are destroyed, so then we can check this in the Azure portal, if we go to resource groups, we can refresh here, we see that the resource group is gone, and then all the resources are gone, so we don't have to think about the cost that generates.

124
00:21:12,200 --> 00:21:26,200
That's what I'm going to go through in this video and module here, so we will later look at further use of variables and similar techniques to make our code as flexible as possible.

