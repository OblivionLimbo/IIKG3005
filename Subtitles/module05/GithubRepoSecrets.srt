1
00:00:00,000 --> 00:00:03,600
In this video, we will get started with getting GitHub in place.

2
00:00:03,600 --> 00:00:09,760
We will ensure that we get the necessary information so that GitHub can be authenticated against our tenant.

3
00:00:09,760 --> 00:00:16,240
I will now install a new repository, because this is the aim; for showing and demonstrating.

4
00:00:16,240 --> 00:00:23,640
I have now logged in to GitHub, and you can create your own user on GitHub, and is now under my repositories.

5
00:00:23,720 --> 00:00:26,040
I will choose here and create a new repository.

6
00:00:26,040 --> 00:00:34,920
I can now call it github-terraform, choose public and read me, I can now choose a terraform, ignore file, git ignore file.

7
00:00:34,920 --> 00:00:41,840
So we can add files that will be ignored to be synced to the GitHub repository, because there are files that we do not want.

8
00:00:41,840 --> 00:00:48,280
To bring to the GitHub repository, choose create, when the GitHub repository is created, you can now choose under code there.

9
00:00:48,280 --> 00:00:53,000
So we see here that we can choose HTTPS, SSH or GitHub CLI, I can now choose the HTTPS.

10
00:00:53,000 --> 00:00:59,280
Copy it, I take it with me to VS Code, clone GitHub repository, paste it in the urn at the top there.

11
00:00:59,280 --> 00:01:03,720
Press enter, clone, clone from url, choose where we want to put it.

12
00:01:05,400 --> 00:01:16,840
Yes, when you open the folder, you see here that there is my gitignore file, here I can add a type of file that I do not want to push over to, or transfer data to GitHub repo,

13
00:01:16,840 --> 00:01:21,040
because there can be sensitive information that I do not want to be available in a repository.

14
00:01:21,040 --> 00:01:25,360
In addition, we have a readme file, where we can begin to enter what kind of information we want to be.

15
00:01:25,360 --> 00:01:32,960
We can now first start by saying that what we need to do is that we have to create a backend,

16
00:01:32,960 --> 00:01:42,160
that is, we want terraform state file to be created when we plan to apply to our infrastructure.

17
00:01:42,160 --> 00:01:47,000
There is a state file that contains sensitive information, and we do not want it to be included in GitHub.

18
00:01:47,000 --> 00:01:56,760
State file is what should be mirrored in the infrastructure, as is in Microsoft Azure for our part, in a configuration file.

19
00:01:56,760 --> 00:02:01,880
And we want to have a secure storage of those files, they should be stored and encrypted,

20
00:02:01,880 --> 00:02:10,760
and we want them to be checked in and checked out when it is accessed by someone who is performing apply and plan against this infrastructure.

21
00:02:10,760 --> 00:02:16,200
So one way we can do that in the beginning is not manually go into the portal,

22
00:02:16,200 --> 00:02:26,280
set up a storage account, a storage container, and add that container as a storage place for the backend, or for the terraform state file.

23
00:02:26,280 --> 00:02:34,200
Or we can also do this using terraform, so we can first try to do it using terraform, and then we'll see how it goes.

24
00:02:34,200 --> 00:02:42,680
But first we need to add the secrets that we need to have in GitHub to be able to connect to VSCode.

25
00:02:42,680 --> 00:02:49,960
Under settings in the top-end of the repository, we can find out where we can add secrets.

26
00:02:49,960 --> 00:02:57,400
That's because we're going to have secrets that will create safe and secure way to can connect to our Azure Tenant,

27
00:02:57,400 --> 00:03:01,640
because we're not going to store anything in plain text, we're going to make sure everything is encrypted.

28
00:03:01,640 --> 00:03:08,760
And then we also need to store secrets as a hidden variable that is not possible to read later, we can just change it.

29
00:03:08,760 --> 00:03:11,720
And under actions we can choose a new repository secret.

30
00:03:11,720 --> 00:03:19,160
Here we have a fixed naming that is set for how we name our Azure secrets or Azure information.

31
00:03:19,160 --> 00:03:26,520
So to add the secret, I can enter a name, and I can follow a typical standard like this.

32
00:03:26,520 --> 00:03:32,760
I can add Azure Client ID, Azure Client Secret, Azure Tenant ID, and Azure Subscription ID.

33
00:03:32,760 --> 00:03:41,480
I can also add an Azure Credential, and then I'll add all the JSON information that comes out when I've set up the service principle

34
00:03:41,480 --> 00:03:46,120
using Azure CLI Web Cloud Shell when I'm starting.

35
00:03:46,120 --> 00:03:53,400
But if you don't have this information from before, you can also just copy it here, and then you can fill in the Client ID,

36
00:03:53,400 --> 00:03:58,120
and then you can add the secret, the subscription ID, and the Tent ID where it should be.

37
00:03:58,120 --> 00:04:02,600
So I'm going to update all of these, so what I basically do is that I take Client ID,

38
00:04:02,600 --> 00:04:08,360
and I paste in my Client ID in this field, and I press Add Secret.

39
00:04:08,360 --> 00:04:13,560
When I press Add Secret, I won't be able see this information again, I can just update it with new information.

40
00:04:13,560 --> 00:04:15,080
I'll do something for all of them.

41
00:04:15,080 --> 00:04:21,640
And when I've done that, we see here that we have Client ID, Client Secret, Credentials,

42
00:04:21,720 --> 00:04:23,400
Subscription ID, and Tenant ID.

43
00:04:23,400 --> 00:04:29,000
The Credentials also contain all of the JSON format of all the information that is there.

44
00:04:29,000 --> 00:04:32,120
It's just to have everything together if we need to use it one time.

45
00:04:32,120 --> 00:04:37,880
So then we've actually got our GitHub repository, so we've put together the secrets we need,

46
00:04:37,880 --> 00:04:41,320
and then we can continue with this repository.

