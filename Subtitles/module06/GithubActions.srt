1
00:00:00,000 --> 00:00:04,200
In this video, we will now start the use of GitHub and GitHub Action.

2
00:00:04,200 --> 00:00:10,560
I now have a finished terraform configuration with a static web page.

3
00:00:10,560 --> 00:00:12,800
We have already gone over what that is.

4
00:00:12,800 --> 00:00:22,000
That means that we will now use GitHub, and we will then set up a GitHub Action that will contain a trigger that will deploy this infrastructure.

5
00:00:22,000 --> 00:00:26,120
I can just quickly go through this setup of the static web page.

6
00:00:26,120 --> 00:00:36,920
In the main, we have some locals that will say that it determines if we are in a workspace, which will then set up such a workspace suffix if we are to deploy these resources.

7
00:00:36,920 --> 00:00:42,920
If it is not in a workspace, that is, if it is default, then it should not have any workspace suffix.

8
00:00:42,920 --> 00:00:48,320
The resource group name will then be that you see if the terraform workspace is default or not.

9
00:00:48,320 --> 00:00:52,320
If it is default, it only takes the variable as the resource group name.

10
00:00:52,320 --> 00:01:04,720
If it is a workspace that is set, then it takes the resource group name plus the suffix, which makes it easier to see what environment you are working with when you see the resources in the Azure portal afterwards.

11
00:01:04,720 --> 00:01:10,920
For that, I would say that if we operate the resource group name, then we do rg-name and then bind-devstage or prod.

12
00:01:10,920 --> 00:01:14,120
In the same way, we do that with the storage account.

13
00:01:14,120 --> 00:01:22,520
Then we take the storage account and then we give it a variable name and then we set up a local space suffix.

14
00:01:22,520 --> 00:01:33,520
I see now that I have forgotten, of course, to check if the workspace is default or not, because we also have to have it on the Azure portal.

15
00:01:33,520 --> 00:01:39,520
So then it is in place and then we see here that it checks if the workspace is there.

16
00:01:39,920 --> 00:01:45,720
So, check the workspace and if not, then it also takes the variable name plus local suffix.

17
00:01:45,720 --> 00:01:52,520
Of course, we also have to have a random generation of a string here, so that we get a unique name in Azure.

18
00:01:52,520 --> 00:01:59,920
What this does is operate a resource group with the name that is based on the processing here in local.

19
00:01:59,920 --> 00:02:03,720
Location is then from var location, variable location.

20
00:02:03,720 --> 00:02:10,120
The name will then be lower on the storage account and what is set in local for the storage account plus random string.

21
00:02:10,120 --> 00:02:15,920
Check the resource group, check location, standard, lrs, set up a static web page on the storage account.

22
00:02:15,920 --> 00:02:22,520
Set up a web or a dollar web that has a specific purpose for hosting static webpages.

23
00:02:22,520 --> 00:02:29,920
Source content then looks at the variable content for source content and then we add local web suffix.

24
00:02:30,120 --> 00:02:37,120
Here we also see that we should have had, if it does not have a workspace here,

25
00:02:37,120 --> 00:02:45,320
then we see that the web suffix here will be empty if it is not there or maybe default if it is not in there.

26
00:02:45,320 --> 00:02:55,320
So here we should also have set in that, for example, the web suffix should be something else if it is not in any workspace.

27
00:02:55,520 --> 00:03:02,720
But if we just leave it there, then we see what the variable will be, because it will just be yours, combined with the web suffix.

28
00:03:02,720 --> 00:03:07,120
Okay, the output is then the web site address, this is a reference.

29
00:03:07,120 --> 00:03:12,120
And then we have the in-app provider, so I still use the backend that I have set up earlier.

30
00:03:12,120 --> 00:03:15,520
I also have here standard, therefore, record providers, etc.

31
00:03:15,520 --> 00:03:18,520
And then the provider manager and features, the obligatory block.

32
00:03:18,520 --> 00:03:24,520
What is important to consider when we are going to push this to Git and use Git of Action to deploy this,

33
00:03:24,520 --> 00:03:31,720
is that our TF storage file is something that we do not want to take over to GitHub.

34
00:03:31,720 --> 00:03:37,720
Therefore, I have now taken my variables file, where I have put in default values, which is included,

35
00:03:37,720 --> 00:03:42,520
and that will be included over to GitHub, which has content that is default value.

36
00:03:42,520 --> 00:03:46,920
Of course, there are things that can be sensitive, should not be included in default value,

37
00:03:46,920 --> 00:03:50,120
and then you can of course mark it as sensitive true.

38
00:03:50,120 --> 00:03:54,320
But in this round now, we will just test now that we get to the Git of Action first,

39
00:03:54,320 --> 00:03:56,720
then we see how we can use the variables later.

40
00:03:56,720 --> 00:04:01,120
Go over to my repo in GitHub, click on GitHub Actions.

41
00:04:01,120 --> 00:04:05,920
When GitHub Actions has come out, we see here that we have a lot of deployments that are shown as examples.

42
00:04:05,920 --> 00:04:09,120
Here we see Terraform, which can show us a workflow for Terraform.

43
00:04:09,120 --> 00:04:14,320
We can also see that it is quite large and extensive, so we do not need to start with it in the first round,

44
00:04:14,320 --> 00:04:18,720
but we can also see here that there are many other types of examples that we can use if we want to see.

45
00:04:18,720 --> 00:04:22,520
What we do first, we set up a workflow yourself,

46
00:04:22,520 --> 00:04:29,120
and when we click on it, we will see here that in this repository, a .github folder is created,

47
00:04:29,120 --> 00:04:34,920
with a workflows folder underneath it, and then we get a yaml file underneath it.

48
00:04:34,920 --> 00:04:41,520
What this map means, I have included in the description for this video,

49
00:04:41,520 --> 00:04:45,120
because then it would be, if I were to go through all the theories for everything that is discussed,

50
00:04:45,120 --> 00:04:47,920
or go through in the video, then it will be a very long video.

51
00:04:47,920 --> 00:04:51,920
So what I name this file here, it is a bit dependent on what I am going to use it for,

52
00:04:51,920 --> 00:04:56,320
but since we can go back to my GitHub, I have called it here for staticwebpage,

53
00:04:56,320 --> 00:04:58,520
no, website, which is under module 6.

54
00:04:58,520 --> 00:05:02,120
I can now just call it here for staticwebsite, yaml,

55
00:05:02,120 --> 00:05:04,120
then I will now fill in yours with information.

56
00:05:04,120 --> 00:05:08,920
So now I have just pasted in here a very simple workflow to go through it,

57
00:05:08,920 --> 00:05:15,720
and then see that we get to publish or deploy this infrastructure with GitHub Actions.

58
00:05:15,920 --> 00:05:20,120
As you can see in the description, or in the comment field here,

59
00:05:20,120 --> 00:05:24,520
there is a basic workflow that helps you to start with GitHub Actions.

60
00:05:24,520 --> 00:05:26,120
The workflow must have a name.

61
00:05:26,120 --> 00:05:31,320
Then there will be something that is dependent on what happens when this trigger is running,

62
00:05:31,320 --> 00:05:38,520
and what I want is that the trigger for this should be dependent on the changes

63
00:05:38,520 --> 00:05:44,920
that come or when it is pushing changes to this map in my repo.

64
00:05:44,920 --> 00:05:50,920
Because I do not want that everything, or if the trigger, for example, is that the main is pushed,

65
00:05:50,920 --> 00:05:53,720
then it will all the time be triggered that it will deploy, deploy, deploy.

66
00:05:53,720 --> 00:05:58,720
This is something I wanted to test with this map, and this infrastructure that is on this map.

67
00:05:58,720 --> 00:06:03,120
So if I now, for example, go back to this one, and then start to change something

68
00:06:03,120 --> 00:06:07,520
inside this configuration file here, and then push it to GitHub,

69
00:06:07,520 --> 00:06:12,520
then that will be the trigger for something to happen with this infrastructure.

70
00:06:12,520 --> 00:06:17,320
Because one can say that as long as something has been pushed to the repo,

71
00:06:17,320 --> 00:06:18,320
then that will be the trigger.

72
00:06:18,320 --> 00:06:22,120
But we have a lot of configuration in here,

73
00:06:22,120 --> 00:06:26,720
which we do not want anything to happen with every single time this is triggered.

74
00:06:26,720 --> 00:06:30,920
Or we do not want this deployment of a static web page to be triggered

75
00:06:30,920 --> 00:06:34,720
every time some changes are made in any of these other maps.

76
00:06:34,720 --> 00:06:39,920
We want this configuration to only be retained, what is in that map.

77
00:06:39,920 --> 00:06:44,520
So therefore, we have that the trigger is the changes that are pushed to the path

78
00:06:44,520 --> 00:06:46,920
course material module 6 static website.

79
00:06:46,920 --> 00:06:49,920
It is also allowed that this can be run manually from GUI.

80
00:06:49,920 --> 00:06:53,120
So when the job is to be run, then there will be something, of course,

81
00:06:53,120 --> 00:06:55,320
that must process and execute this job.

82
00:06:55,320 --> 00:06:56,920
And then we spin up an Ubuntu.

83
00:06:56,920 --> 00:07:02,320
We spin up an Ubuntu that then operates a job,

84
00:07:02,320 --> 00:07:04,320
as it is called for web.

85
00:07:04,320 --> 00:07:07,320
And here we see that it has specified the environmental variables,

86
00:07:07,320 --> 00:07:11,520
which are Azure Client ID, Azure Client Secret, Azure Subscription and Azure Tenant.

87
00:07:11,520 --> 00:07:13,520
In addition, I have also had a working directory,

88
00:07:13,520 --> 00:07:16,720
because I want Terraform to be executed in the working directory,

89
00:07:16,720 --> 00:07:21,520
so that it does and executes the actions on the correct map.

90
00:07:21,520 --> 00:07:23,320
So we come to the steps, what is it supposed to do?

91
00:07:23,320 --> 00:07:25,120
Yes, it is supposed to perform a checkout.

92
00:07:25,120 --> 00:07:31,520
Checkout means that it copies the repository content over to its place,

93
00:07:31,520 --> 00:07:35,320
so that the Ubuntu machine can actually access the file and execute what it is supposed to do.

94
00:07:35,520 --> 00:07:37,520
Actions and checkout, I'll come back to that.

95
00:07:37,520 --> 00:07:38,520
We'll find it in the Marketplace.

96
00:07:38,520 --> 00:07:40,720
This is, I think, maybe a V4 or something.

97
00:07:40,720 --> 00:07:44,320
So what we do afterwards is that we run a Terraform command,

98
00:07:44,320 --> 00:07:49,720
because we now want to use Terraform to execute these transactions.

99
00:07:49,720 --> 00:07:53,320
I could of course have added a name to this checkout,

100
00:07:53,320 --> 00:07:58,120
that it has got a name in the same way that all the steps here could have got a name,

101
00:07:58,120 --> 00:08:02,720
so that you can easily see it in the GitHub user interface afterwards.

102
00:08:02,720 --> 00:08:05,520
So afterwards, it's actually just familiar information from before.

103
00:08:05,520 --> 00:08:08,520
Here we run Terraform init, which means that it builds up back-end,

104
00:08:08,520 --> 00:08:12,720
ensures that it has a place where it stores state files,

105
00:08:12,720 --> 00:08:14,920
and the state file would then be Azure.

106
00:08:14,920 --> 00:08:17,920
The storage account, where we have a container called TFState,

107
00:08:17,920 --> 00:08:21,520
then put a file there, because we remember that if we go back,

108
00:08:21,520 --> 00:08:23,720
we see Prider on our static file.

109
00:08:23,720 --> 00:08:28,320
Here we refer to the resource group that we have had before for the state file,

110
00:08:28,320 --> 00:08:30,720
the storage account, also the container name,

111
00:08:30,720 --> 00:08:32,520
and also what key we are going to use.

112
00:08:32,520 --> 00:08:37,320
I can double-check now, just by going to the resource groups on the tenant I use.

113
00:08:37,320 --> 00:08:39,320
Here is rgbacon.tfstate.

114
00:08:39,320 --> 00:08:41,920
Then I can look at the storage account.

115
00:08:41,920 --> 00:08:46,920
I have cleaned up this a bit before, but you can of course overwrite the files,

116
00:08:46,920 --> 00:08:51,120
which is there with a new configuration when you deploy a new one.

117
00:08:51,120 --> 00:08:57,320
Here is the container, and here I only have back-end files for Terraform,

118
00:08:57,320 --> 00:09:00,920
I mean, Terraform state files for my back-end that will host this one.

119
00:09:00,920 --> 00:09:04,720
So now afterwards, I will get a web Terraform TFState,

120
00:09:04,720 --> 00:09:07,120
depending on what name I have set here.

121
00:09:07,120 --> 00:09:12,120
And then I can continue the deployment by running Terraform plan,

122
00:09:12,120 --> 00:09:13,120
which we are familiar with.

123
00:09:13,120 --> 00:09:14,720
Terraform plan on working directory.

124
00:09:14,720 --> 00:09:18,120
Then I run a Terraform apply on working directory with auto-approve,

125
00:09:18,120 --> 00:09:22,120
because I can not give any input after I have sent everything here over to Ubuntu,

126
00:09:22,120 --> 00:09:24,520
which is going to perform this task.

127
00:09:24,520 --> 00:09:27,920
So then I can easily now just commit the changes like this,

128
00:09:27,920 --> 00:09:30,120
and then create static-website-yaml.

129
00:09:30,120 --> 00:09:31,520
Perfect, I'll do that.

130
00:09:31,520 --> 00:09:35,920
And then we see that we have set up our first GitHub workflow in GitHub.

131
00:09:35,920 --> 00:09:39,920
If we now go to Terraform, no, to our VS Code,

132
00:09:39,920 --> 00:09:46,920
then it is now set up that there should be a trigger that is performed based on the changes in this file.

133
00:09:46,920 --> 00:09:50,120
I can now first go to source control,

134
00:09:50,120 --> 00:09:55,720
I can now also pull, so that I can get all the last information.

135
00:09:55,720 --> 00:09:59,120
And then we see here that under the top here now,

136
00:09:59,120 --> 00:10:03,720
there is a GitHub folder with workflows and static-website-yaml.

137
00:10:03,720 --> 00:10:05,920
It means that it is, as I said, under the root,

138
00:10:05,920 --> 00:10:11,520
so that this static-yaml file was the one we set up instead in GitHub.

139
00:10:11,520 --> 00:10:17,120
So now we have all these files that we have in GitHub repo and in the VS Code.

140
00:10:17,120 --> 00:10:18,720
If we now go back here,

141
00:10:18,720 --> 00:10:22,720
what we are going to do is try to trigger the whole GitHub,

142
00:10:22,720 --> 00:10:26,720
GitHub action with changes that are made in static-website.

143
00:10:26,720 --> 00:10:32,120
I have in my main file here now, I have made some changes that have not been saved.

144
00:10:32,120 --> 00:10:33,720
So if I, for example, now,

145
00:10:33,720 --> 00:10:38,720
make this one go to GRS, Global Redundant Storage,

146
00:10:38,720 --> 00:10:40,120
then I save it.

147
00:10:40,120 --> 00:10:46,520
When I save it, source control will now see that there is a change in the file here,

148
00:10:46,520 --> 00:10:49,920
which makes it possible to push these changes to GitHub.

149
00:10:49,920 --> 00:10:55,520
Now we see, source control says that there is a change here that I want to be committed.

150
00:10:55,520 --> 00:10:58,720
I can now first go to GitHub and look at my GitHub action again,

151
00:10:58,720 --> 00:11:02,920
that it has set up a GitHub action workflow called web.

152
00:11:02,920 --> 00:11:07,320
So if I click on it, I can see here that this has not been run yet.

153
00:11:07,320 --> 00:11:11,920
So you can see now, if we continue to trigger this, we will also take deploy, web,

154
00:11:11,920 --> 00:11:14,520
GRS, GRS.

155
00:11:14,520 --> 00:11:17,920
This is the first deployed menu, but if it has already been deployed,

156
00:11:17,920 --> 00:11:20,520
then we can just sync changes.

157
00:11:20,520 --> 00:11:23,920
And then we can go over to our GitHub web,

158
00:11:23,920 --> 00:11:26,720
then we take a little refresh on it.

159
00:11:26,720 --> 00:11:28,920
And then we see here that deploy, web.

160
00:11:28,920 --> 00:11:29,720
Click up.

161
00:11:29,720 --> 00:11:32,320
It is then pushed by me.

162
00:11:32,320 --> 00:11:33,320
And it is the main.

163
00:11:33,320 --> 00:11:34,920
And then we can now go into the job.

164
00:11:34,920 --> 00:11:35,920
So we see here.

165
00:11:35,920 --> 00:11:39,920
Here we see static-website, YAML, on push.

166
00:11:39,920 --> 00:11:42,320
Then we see what happens further down.

167
00:11:42,320 --> 00:11:45,720
And then we can see here that all steps that are made,

168
00:11:45,720 --> 00:11:49,120
which is in the YAML file, will be first checked out.

169
00:11:49,120 --> 00:11:52,120
Then we run the GitHub, no, Terraform init,

170
00:11:52,120 --> 00:11:54,320
which we also see that we know from before,

171
00:11:54,320 --> 00:11:57,720
because it has an init of the backend.

172
00:11:57,720 --> 00:12:00,920
Then we see here initializing provider plugins,

173
00:12:00,920 --> 00:12:04,320
go through what is there, Terraform is successfully initialized.

174
00:12:04,320 --> 00:12:06,320
Then we run a Terraform plan.

175
00:12:06,320 --> 00:12:09,120
And then we see here how the resources are set up.

176
00:12:09,120 --> 00:12:11,920
And this is also known to us from the VS code.

177
00:12:11,920 --> 00:12:13,920
Then we see here plan for to add.

178
00:12:13,920 --> 00:12:15,920
And then run it through Terraform apply.

179
00:12:15,920 --> 00:12:20,320
And then it starts to deploy these resources, of course.

180
00:12:20,320 --> 00:12:22,920
And then we see what is happening now.

181
00:12:22,920 --> 00:12:25,320
Where is Terraform apply?

182
00:12:25,320 --> 00:12:29,320
It is now, and then push out these resources,

183
00:12:29,320 --> 00:12:35,320
based on my change in the repo on VS code.

184
00:12:35,320 --> 00:12:36,520
That I changed something here.

185
00:12:36,520 --> 00:12:40,320
Committed it, pushed it over to GitHub,

186
00:12:40,320 --> 00:12:43,320
which then started the deployment of this one.

187
00:12:43,320 --> 00:12:46,520
Because we have set that these and these Terraform commands

188
00:12:46,520 --> 00:12:49,720
should be run through a workflow,

189
00:12:49,720 --> 00:12:52,720
when a change is made in this map.

190
00:12:52,720 --> 00:12:55,120
And then we also have primary with endpoints.

191
00:12:55,120 --> 00:12:58,920
We had an output from this Terraform configuration,

192
00:12:58,920 --> 00:13:04,320
which would show us the URL to this static web page,

193
00:13:04,320 --> 00:13:06,720
which is in this storage account,

194
00:13:06,720 --> 00:13:09,120
after it has run is finished.

195
00:13:09,120 --> 00:13:11,520
Then we are post run action and complete job.

196
00:13:11,520 --> 00:13:16,920
So now it has run through all this work,

197
00:13:16,920 --> 00:13:22,120
which makes it can quickly check in Azure.

198
00:13:22,120 --> 00:13:23,920
And in Azure, if we take a refresh here,

199
00:13:23,920 --> 00:13:25,920
then we see that now we have RG Web.

200
00:13:25,920 --> 00:13:28,720
Under RG Web, we have the storage account,

201
00:13:28,720 --> 00:13:32,120
which has then received SA Web random generated name.

202
00:13:32,120 --> 00:13:34,320
And then under the storage account,

203
00:13:34,320 --> 00:13:39,720
there is, as we will add, a static web page website.

204
00:13:39,720 --> 00:13:41,720
And under static web page, we have the URL here.

205
00:13:41,720 --> 00:13:45,120
This can be seen back on the deployment,

206
00:13:45,120 --> 00:13:47,120
that under Terraform Apply,

207
00:13:47,120 --> 00:13:48,720
at the bottom there, we have it.

208
00:13:48,720 --> 00:13:51,320
So if we press this one, it will open a web page.

209
00:13:51,320 --> 00:13:55,120
Note that it takes a little time before this page actually comes up,

210
00:13:55,120 --> 00:13:58,320
or if the job is finished,

211
00:13:58,320 --> 00:13:59,720
so if you go in on the page too early,

212
00:13:59,720 --> 00:14:01,720
then you can just get this application,

213
00:14:01,720 --> 00:14:03,120
or something that is in production.

214
00:14:03,120 --> 00:14:04,920
Here we see that it got with default,

215
00:14:04,920 --> 00:14:06,320
since it was what it was,

216
00:14:06,320 --> 00:14:07,320
so it was not really,

217
00:14:07,320 --> 00:14:09,320
you can of course change it so that you do not get with default,

218
00:14:09,320 --> 00:14:12,920
but here we have at least performed a deployment,

219
00:14:12,920 --> 00:14:15,320
using GitHub Actions.

220
00:14:15,320 --> 00:14:19,520
But now we have applied and deployed this infrastructure,

221
00:14:19,520 --> 00:14:22,320
but what we want to do now,

222
00:14:22,320 --> 00:14:24,320
or what we have done throughout the course,

223
00:14:24,320 --> 00:14:26,520
is that we destroy here when we are done testing.

224
00:14:26,520 --> 00:14:29,920
Because there was just a test use of a static web page,

225
00:14:29,920 --> 00:14:32,520
with no use of workspaces.

226
00:14:32,520 --> 00:14:34,320
So this is one single stage,

227
00:14:34,320 --> 00:14:37,720
or one single environment that is deployed.

228
00:14:37,720 --> 00:14:39,120
So we want to remove this now.

229
00:14:39,120 --> 00:14:42,320
But as we can see now on our GitHub workflow,

230
00:14:42,320 --> 00:14:44,520
what triggers this workflow,

231
00:14:44,520 --> 00:14:45,720
what does the workflow contain?

232
00:14:45,720 --> 00:14:50,120
Yes, this is just that there will be a change to this map,

233
00:14:50,120 --> 00:14:51,720
and then we have a workflow dispatch,

234
00:14:51,720 --> 00:14:53,320
it does not say anything below here,

235
00:14:53,320 --> 00:14:56,720
but it allows us to run it from the GitHub repository.

236
00:14:56,720 --> 00:14:59,920
And here we also have the terraform steps that will be done,

237
00:14:59,920 --> 00:15:02,320
all the steps in it, plan, apply.

238
00:15:02,320 --> 00:15:02,920
And as you can see,

239
00:15:02,920 --> 00:15:06,720
here is missing a step that we may be familiar with from before.

240
00:15:06,720 --> 00:15:07,520
We have to do something about it.

241
00:15:07,520 --> 00:15:09,720
So before we edit this file.

242
00:15:09,720 --> 00:15:12,720
So if we start the workflow dispatch,

243
00:15:12,720 --> 00:15:15,120
as I said, I put a link where you can find information

244
00:15:15,120 --> 00:15:17,120
about everything that goes through here now,

245
00:15:17,120 --> 00:15:19,920
so you can just take the theory in the video.

246
00:15:19,920 --> 00:15:21,520
So what we can add,

247
00:15:21,520 --> 00:15:26,320
is an input that is required to determine

248
00:15:26,320 --> 00:15:29,720
what is to be done when this trigger happens.

249
00:15:29,720 --> 00:15:31,920
So here we see, we have added a workflow dispatch,

250
00:15:31,920 --> 00:15:32,920
we have added an input.

251
00:15:32,920 --> 00:15:34,320
We have an action type,

252
00:15:34,320 --> 00:15:37,120
that is, what action should be performed.

253
00:15:37,320 --> 00:15:39,720
And then there is an apply or destroy,

254
00:15:39,720 --> 00:15:40,920
which we want to do here.

255
00:15:40,920 --> 00:15:42,520
This input is required,

256
00:15:42,520 --> 00:15:44,920
and then of course we set a default to apply,

257
00:15:44,920 --> 00:15:46,920
so that if we do not give it an input,

258
00:15:46,920 --> 00:15:47,720
then it is applied.

259
00:15:47,720 --> 00:15:48,720
The last thing we have to change,

260
00:15:48,720 --> 00:15:51,920
that is what happens in the bottom row here.

261
00:15:51,920 --> 00:15:55,320
Because here we have terraform apply,

262
00:15:55,320 --> 00:15:56,920
and then you have to enter an if,

263
00:15:56,920 --> 00:15:57,720
and then you see here that

264
00:15:57,720 --> 00:15:59,920
GitHub event input action type,

265
00:15:59,920 --> 00:16:01,320
if it is not applied,

266
00:16:01,320 --> 00:16:04,320
then it will run terraform apply auto approve,

267
00:16:04,320 --> 00:16:05,520
and in working directory.

268
00:16:05,520 --> 00:16:07,120
And here we see, if terraform,

269
00:16:07,120 --> 00:16:09,320
or the name terraform destroy,

270
00:16:09,320 --> 00:16:11,320
so GitHub event input action type,

271
00:16:11,320 --> 00:16:12,720
is like destroy,

272
00:16:12,720 --> 00:16:16,520
then it will run terraform destroy auto approve.

273
00:16:16,520 --> 00:16:18,520
So then it would say that it runs through terraform,

274
00:16:18,520 --> 00:16:19,320
into terraform plan,

275
00:16:19,320 --> 00:16:20,920
but when it comes further now,

276
00:16:20,920 --> 00:16:22,320
to the steps we saw earlier,

277
00:16:22,320 --> 00:16:24,120
then it will decide based on the input,

278
00:16:24,120 --> 00:16:25,920
if it actually should run apply,

279
00:16:25,920 --> 00:16:26,620
is it not an input,

280
00:16:26,620 --> 00:16:27,520
default apply,

281
00:16:27,520 --> 00:16:28,320
is it an input,

282
00:16:28,320 --> 00:16:30,720
then it can most likely be set to destroy,

283
00:16:30,720 --> 00:16:32,320
because we want to delete it,

284
00:16:32,320 --> 00:16:34,120
when we are done testing.

285
00:16:34,320 --> 00:16:37,320
Then we just have to commit these changes,

286
00:16:37,320 --> 00:16:38,520
update,

287
00:16:38,520 --> 00:16:42,320
write that it was a input action that was set,

288
00:16:42,320 --> 00:16:43,920
and when we have done this now,

289
00:16:43,920 --> 00:16:46,920
then we can go back to our GitHub action,

290
00:16:46,920 --> 00:16:49,520
and then we can look at web,

291
00:16:49,520 --> 00:16:50,120
and here we see,

292
00:16:50,120 --> 00:16:52,920
this workflow has a workflow dispatch trigger,

293
00:16:52,920 --> 00:16:54,920
and then we can see here that,

294
00:16:54,920 --> 00:16:55,720
now we have,

295
00:16:55,720 --> 00:16:58,320
what action should be performed,

296
00:16:58,320 --> 00:16:59,320
and then as I said,

297
00:16:59,320 --> 00:17:00,320
apply as default,

298
00:17:05,120 --> 00:17:06,720
let's see,

299
00:17:06,720 --> 00:17:07,720
on workflow,

300
00:17:07,720 --> 00:17:09,720
so that we have the opportunity to apply destroy here,

301
00:17:09,720 --> 00:17:11,520
it has provided a nice way to do it,

302
00:17:11,520 --> 00:17:14,920
if you want it to be manual,

303
00:17:14,920 --> 00:17:16,320
through,

304
00:17:16,320 --> 00:17:17,720
should it be in the production environment,

305
00:17:17,720 --> 00:17:18,120
for example,

306
00:17:18,120 --> 00:17:19,720
then we will see on the scene,

307
00:17:19,720 --> 00:17:21,120
how we use it as a trigger,

308
00:17:21,120 --> 00:17:22,320
that there will be a manual,

309
00:17:22,320 --> 00:17:23,320
or a message,

310
00:17:23,320 --> 00:17:25,520
that someone has to manually send to Eprod,

311
00:17:25,520 --> 00:17:26,320
and here too,

312
00:17:26,320 --> 00:17:27,320
it has provided a way to have,

313
00:17:27,320 --> 00:17:28,520
that something is going to be destroyed,

314
00:17:28,520 --> 00:17:29,520
if something is going to be destroyed,

315
00:17:29,520 --> 00:17:30,920
then it is a manual operation,

316
00:17:30,920 --> 00:17:31,520
that must be done,

317
00:17:31,520 --> 00:17:32,520
so that you do not,

318
00:17:32,720 --> 00:17:34,520
but for our test for tomorrow,

319
00:17:34,520 --> 00:17:35,720
then it is a bit like,

320
00:17:35,720 --> 00:17:37,520
not quite where we see ourselves,

321
00:17:37,520 --> 00:17:38,120
that we want to be,

322
00:17:38,120 --> 00:17:39,720
for now we just have to build up,

323
00:17:39,720 --> 00:17:40,720
and tear down,

324
00:17:40,720 --> 00:17:41,520
without too much manual,

325
00:17:41,520 --> 00:17:42,320
then we will rather see,

326
00:17:42,320 --> 00:17:44,520
when we set it up with environments,

327
00:17:44,520 --> 00:17:46,320
that we must have a form for,

328
00:17:46,320 --> 00:17:48,120
manual interaction,

329
00:17:48,120 --> 00:17:50,120
to deploy to Eprod,

330
00:17:50,120 --> 00:17:50,920
and not least,

331
00:17:50,920 --> 00:17:51,720
destroy it,

332
00:17:51,720 --> 00:17:53,320
so then we have to go back to,

333
00:17:53,320 --> 00:17:55,520
to our file,

334
00:17:55,520 --> 00:17:56,520
yaml file,

335
00:17:56,520 --> 00:17:57,520
for static website,

336
00:17:57,520 --> 00:17:58,120
understand,

337
00:17:58,120 --> 00:17:59,520
remember to have,

338
00:17:59,520 --> 00:18:00,720
yaml,

339
00:18:00,720 --> 00:18:01,520
extension,

340
00:18:01,520 --> 00:18:01,920
and not least,

341
00:18:01,920 --> 00:18:02,720
you can also have a,

342
00:18:02,720 --> 00:18:03,720
GitHub action,

343
00:18:04,120 --> 00:18:04,720
extension,

344
00:18:04,720 --> 00:18:06,520
which makes you see the actions,

345
00:18:06,520 --> 00:18:08,520
in the VS Code,

346
00:18:08,520 --> 00:18:10,120
I can write an observation,

347
00:18:10,120 --> 00:18:11,520
of which extensions I use,

348
00:18:11,520 --> 00:18:12,520
but what we have to do then,

349
00:18:12,520 --> 00:18:14,920
this will be a manual trigger,

350
00:18:14,920 --> 00:18:17,520
which we may not want to use,

351
00:18:17,520 --> 00:18:18,320
for this purpose,

352
00:18:18,320 --> 00:18:19,320
so what we can say then,

353
00:18:19,320 --> 00:18:19,520
okay,

354
00:18:19,520 --> 00:18:21,320
we want to make something,

355
00:18:21,320 --> 00:18:21,720
a trigger,

356
00:18:21,720 --> 00:18:22,920
that should be based on,

357
00:18:22,920 --> 00:18:26,320
which commit message,

358
00:18:26,320 --> 00:18:27,120
or message,

359
00:18:27,120 --> 00:18:28,720
that is put in the commit,

360
00:18:28,720 --> 00:18:29,520
so that if I,

361
00:18:29,520 --> 00:18:29,920
for example,

362
00:18:29,920 --> 00:18:30,720
make some changes,

363
00:18:30,720 --> 00:18:31,520
in these files,

364
00:18:31,520 --> 00:18:34,120
and then set the commit message,

365
00:18:34,120 --> 00:18:35,720
to destroy,

366
00:18:35,720 --> 00:18:37,520
then it will trigger,

367
00:18:37,520 --> 00:18:40,120
that this will be destroyed,

368
00:18:40,120 --> 00:18:42,320
so then I just take this away,

369
00:18:42,320 --> 00:18:43,320
because then we have actually,

370
00:18:43,320 --> 00:18:44,920
seen how it works,

371
00:18:44,920 --> 00:18:46,320
and how we can use it,

372
00:18:46,320 --> 00:18:47,920
and then we can now,

373
00:18:47,920 --> 00:18:49,920
take away this,

374
00:18:49,920 --> 00:18:51,320
I could even change this,

375
00:18:51,320 --> 00:18:52,120
because I have already used it,

376
00:18:52,120 --> 00:18:53,920
under deploy our resource groups,

377
00:18:53,920 --> 00:18:55,520
so if we can just call this here,

378
00:18:55,520 --> 00:18:56,320
for what else,

379
00:18:56,320 --> 00:18:56,920
actually,

380
00:18:56,920 --> 00:18:58,320
if it contains a single job call,

381
00:18:58,520 --> 00:18:59,320
there is a picture,

382
00:18:59,320 --> 00:19:01,120
but I call it for web,

383
00:19:01,120 --> 00:19:03,520
and it is a deployment of web,

384
00:19:03,520 --> 00:19:04,720
so what we write here,

385
00:19:04,720 --> 00:19:05,920
we can just write,

386
00:19:05,920 --> 00:19:06,520
terraform,

387
00:19:06,520 --> 00:19:07,720
and then it is then,

388
00:19:07,720 --> 00:19:08,720
what we should do then,

389
00:19:08,720 --> 00:19:10,720
it was that we should check,

390
00:19:10,720 --> 00:19:12,920
what happened,

391
00:19:12,920 --> 00:19:13,320
with this,

392
00:19:13,320 --> 00:19:14,120
because this would no longer be,

393
00:19:14,120 --> 00:19:14,920
in hell,

394
00:19:14,920 --> 00:19:16,120
here it is,

395
00:19:16,120 --> 00:19:17,520
gone with this,

396
00:19:17,520 --> 00:19:18,920
because this was based on,

397
00:19:18,920 --> 00:19:20,320
the trigger we had instead,

398
00:19:20,320 --> 00:19:22,120
with apply and destroy,

399
00:19:22,120 --> 00:19:24,320
but it was a manual thing then,

400
00:19:24,320 --> 00:19:25,920
so what we then have to,

401
00:19:25,920 --> 00:19:27,120
put in here,

402
00:19:27,120 --> 00:19:27,520
like this,

403
00:19:27,520 --> 00:19:29,920
now we have put in a new step,

404
00:19:29,920 --> 00:19:31,320
or a step,

405
00:19:31,320 --> 00:19:32,520
in all our steps,

406
00:19:32,520 --> 00:19:33,920
we have check out first,

407
00:19:33,920 --> 00:19:35,120
terraform in terraform plan,

408
00:19:35,120 --> 00:19:35,920
and then we have,

409
00:19:35,920 --> 00:19:37,920
check last commit message,

410
00:19:37,920 --> 00:19:39,920
so when it does check,

411
00:19:39,920 --> 00:19:41,320
in the output,

412
00:19:41,320 --> 00:19:43,120
or in the blog file,

413
00:19:43,120 --> 00:19:44,520
which is for this commit,

414
00:19:44,520 --> 00:19:45,720
so check it then,

415
00:19:45,720 --> 00:19:49,520
if this message is destroy,

416
00:19:49,520 --> 00:19:50,920
then it will run,

417
00:19:50,920 --> 00:19:52,320
a terraform destroy,

418
00:19:52,320 --> 00:19:53,920
if it is not a destroy,

419
00:19:53,920 --> 00:19:55,520
so anything else,

420
00:19:55,520 --> 00:19:56,320
then it would be,

421
00:19:56,320 --> 00:19:57,520
that it contains,

422
00:19:57,520 --> 00:19:58,120
auto,

423
00:19:58,120 --> 00:19:59,120
or it would go through,

424
00:19:59,120 --> 00:19:59,920
terraform apply,

425
00:19:59,920 --> 00:20:00,720
auto approve,

426
00:20:00,720 --> 00:20:01,920
and that's how we want it,

427
00:20:01,920 --> 00:20:02,920
so now we can check it,

428
00:20:02,920 --> 00:20:04,720
that we then also save,

429
00:20:04,720 --> 00:20:05,520
the commit,

430
00:20:05,520 --> 00:20:06,520
we take,

431
00:20:06,520 --> 00:20:07,320
let's see,

432
00:20:07,320 --> 00:20:08,120
so,

433
00:20:08,120 --> 00:20:10,720
then we will update it here,

434
00:20:10,720 --> 00:20:11,720
and then we can say,

435
00:20:11,720 --> 00:20:12,520
that the message here,

436
00:20:12,520 --> 00:20:14,320
should be that we have put,

437
00:20:14,320 --> 00:20:15,720
what we have changed,

438
00:20:15,720 --> 00:20:17,520
is a conditional run,

439
00:20:17,520 --> 00:20:18,920
for terraform,

440
00:20:18,920 --> 00:20:20,120
and then we just take,

441
00:20:20,120 --> 00:20:21,920
and synchronize it out,

442
00:20:21,920 --> 00:20:23,320
to our GitHub,

443
00:20:23,320 --> 00:20:25,720
so that the workflow file,

444
00:20:25,720 --> 00:20:26,520
is updated,

445
00:20:26,520 --> 00:20:27,120
I mix a little,

446
00:20:27,120 --> 00:20:28,120
between where I update the file,

447
00:20:28,120 --> 00:20:28,920
sometimes in VS Code,

448
00:20:28,920 --> 00:20:30,720
sometimes in GitHub,

449
00:20:30,720 --> 00:20:31,520
web,

450
00:20:31,520 --> 00:20:32,320
limit,

451
00:20:32,320 --> 00:20:33,120
but you have to at least remember,

452
00:20:33,120 --> 00:20:33,920
that if you do something,

453
00:20:33,920 --> 00:20:34,520
in the web limit,

454
00:20:34,520 --> 00:20:35,720
then you have to come back,

455
00:20:35,720 --> 00:20:36,520
to the VS Code,

456
00:20:36,520 --> 00:20:36,920
and push,

457
00:20:36,920 --> 00:20:37,720
or pull down,

458
00:20:37,720 --> 00:20:38,720
the changes,

459
00:20:38,720 --> 00:20:39,720
that have been made here,

460
00:20:39,720 --> 00:20:40,920
so if we then go to,

461
00:20:40,920 --> 00:20:42,520
the workflow of ours,

462
00:20:42,520 --> 00:20:43,520
then we can see here now,

463
00:20:43,520 --> 00:20:45,120
that there are no workflows,

464
00:20:45,120 --> 00:20:46,520
that are run through,

465
00:20:46,520 --> 00:20:47,720
we can then,

466
00:20:47,720 --> 00:20:48,320
try something,

467
00:20:48,320 --> 00:20:49,520
if we manage to trigger,

468
00:20:49,520 --> 00:20:51,320
this destroy,

469
00:20:51,320 --> 00:20:53,120
based on the new,

470
00:20:53,120 --> 00:20:53,920
changes of ours,

471
00:20:53,920 --> 00:20:54,720
in Yammer file,

472
00:20:54,720 --> 00:20:55,320
because we have,

473
00:20:55,320 --> 00:20:55,920
RG Web,

474
00:20:55,920 --> 00:20:56,920
which is here now,

475
00:20:56,920 --> 00:20:59,720
and then we will go in here,

476
00:20:59,720 --> 00:21:00,520
module 6,

477
00:21:00,520 --> 00:21:01,120
static web,

478
00:21:01,120 --> 00:21:02,320
we can go to main,

479
00:21:02,320 --> 00:21:02,920
TF,

480
00:21:02,920 --> 00:21:04,520
and here we can now change then,

481
00:21:04,520 --> 00:21:06,720
that we will have a commit message,

482
00:21:06,720 --> 00:21:08,520
which will destroy,

483
00:21:08,520 --> 00:21:10,920
this infrastructure,

484
00:21:10,920 --> 00:21:13,320
what this change is,

485
00:21:13,320 --> 00:21:14,520
it can be that we just,

486
00:21:14,520 --> 00:21:14,920
for example,

487
00:21:14,920 --> 00:21:16,520
set a change,

488
00:21:16,520 --> 00:21:18,120
from one or the other here,

489
00:21:18,120 --> 00:21:20,320
or we can also just put in,

490
00:21:20,320 --> 00:21:22,120
destroy,

491
00:21:22,120 --> 00:21:22,720
like that,

492
00:21:22,720 --> 00:21:24,120
so if I,

493
00:21:24,120 --> 00:21:24,720
save it now,

494
00:21:24,720 --> 00:21:27,120
then we see that we get a commit,

495
00:21:27,120 --> 00:21:27,920
and then if I write,

496
00:21:27,920 --> 00:21:28,920
destroy,

497
00:21:28,920 --> 00:21:30,320
and we can check then,

498
00:21:30,320 --> 00:21:31,320
what is the word,

499
00:21:31,320 --> 00:21:32,320
that should be in the message,

500
00:21:32,320 --> 00:21:32,720
yes,

501
00:21:32,720 --> 00:21:33,920
it is destroy,

502
00:21:33,920 --> 00:21:35,120
go out back,

503
00:21:35,120 --> 00:21:36,520
and commit it,

504
00:21:36,520 --> 00:21:38,520
and then we run a,

505
00:21:38,520 --> 00:21:39,520
synchronization of it,

506
00:21:39,520 --> 00:21:40,520
out to GitHub,

507
00:21:40,520 --> 00:21:41,320
we can go to GitHub,

508
00:21:41,320 --> 00:21:42,520
workflow of ours,

509
00:21:42,520 --> 00:21:43,320
then you will see now,

510
00:21:43,320 --> 00:21:44,320
that in a short time,

511
00:21:44,320 --> 00:21:46,520
then this workflow will be triggered,

512
00:21:46,520 --> 00:21:48,320
and it is called destroy,

513
00:21:48,320 --> 00:21:49,120
and then we can see,

514
00:21:49,120 --> 00:21:50,920
all of the steps,

515
00:21:50,920 --> 00:21:52,720
as this workflow,

516
00:21:52,720 --> 00:21:53,520
runs through,

517
00:21:53,520 --> 00:21:54,320
and then we see,

518
00:21:54,320 --> 00:21:55,120
that here,

519
00:21:55,120 --> 00:21:56,320
has the check,

520
00:21:56,320 --> 00:21:58,120
of the last,

521
00:21:58,120 --> 00:21:59,120
committed message,

522
00:21:59,120 --> 00:22:00,520
has been run,

523
00:22:00,520 --> 00:22:00,920
and then we see,

524
00:22:00,920 --> 00:22:01,720
that police has been,

525
00:22:01,720 --> 00:22:02,520
that this is,

526
00:22:02,520 --> 00:22:03,120
deprecated,

527
00:22:03,120 --> 00:22:04,120
so there is another way,

528
00:22:04,120 --> 00:22:05,120
to do it for now,

529
00:22:05,120 --> 00:22:07,520
and then we have conditional run,

530
00:22:07,520 --> 00:22:08,920
on Terraform,

531
00:22:08,920 --> 00:22:09,720
action,

532
00:22:09,720 --> 00:22:10,520
but,

533
00:22:10,520 --> 00:22:11,720
conditional access mine,

534
00:22:11,720 --> 00:22:13,120
was not quite,

535
00:22:13,120 --> 00:22:15,120
as expected,

536
00:22:15,120 --> 00:22:15,920
it did not do,

537
00:22:15,920 --> 00:22:17,320
exactly,

538
00:22:17,320 --> 00:22:18,920
what I had thought,

539
00:22:18,920 --> 00:22:19,520
because here,

540
00:22:19,520 --> 00:22:20,120
there is no change,

541
00:22:20,120 --> 00:22:21,920
no object needed to be destroyed,

542
00:22:21,920 --> 00:22:22,520
so that it,

543
00:22:22,520 --> 00:22:23,520
most likely,

544
00:22:23,520 --> 00:22:24,520
has not seen,

545
00:22:24,520 --> 00:22:26,520
what it should have destroyed,

546
00:22:26,520 --> 00:22:27,920
and then we have to go back,

547
00:22:27,920 --> 00:22:28,720
and fix it,

548
00:22:28,720 --> 00:22:29,520
and it can be,

549
00:22:29,520 --> 00:22:30,520
as simple as,

550
00:22:30,520 --> 00:22:31,120
that,

551
00:22:31,120 --> 00:22:32,320
I have forgotten,

552
00:22:32,320 --> 00:22:33,120
to take with,

553
00:22:33,120 --> 00:22:34,720
which working directory,

554
00:22:34,720 --> 00:22:35,920
this should be,

555
00:22:35,920 --> 00:22:36,520
so that,

556
00:22:36,520 --> 00:22:37,520
if something happens here,

557
00:22:37,520 --> 00:22:38,920
it runs,

558
00:22:38,920 --> 00:22:39,720
Terraform,

559
00:22:39,720 --> 00:22:40,520
destroy,

560
00:22:40,520 --> 00:22:41,520
but,

561
00:22:41,520 --> 00:22:42,120
they do not know,

562
00:22:42,120 --> 00:22:42,720
how to do it,

563
00:22:42,720 --> 00:22:43,520
and therefore,

564
00:22:43,520 --> 00:22:44,320
then we take,

565
00:22:44,320 --> 00:22:46,120
and then put it,

566
00:22:46,120 --> 00:22:47,320
in here,

567
00:22:47,320 --> 00:22:48,520
look,

568
00:22:48,520 --> 00:22:49,920
and,

569
00:22:49,920 --> 00:22:50,720
so,

570
00:22:50,720 --> 00:22:52,120
then we save it,

571
00:22:52,120 --> 00:22:53,720
so we also take,

572
00:22:53,720 --> 00:22:54,520
set,

573
00:22:54,520 --> 00:22:55,920
that it should,

574
00:22:55,920 --> 00:22:56,720
update,

575
00:22:56,720 --> 00:22:57,920
working,

576
00:22:57,920 --> 00:22:58,920
work,

577
00:22:58,920 --> 00:22:59,720
dir,

578
00:22:59,720 --> 00:23:00,920
kond,

579
00:23:00,920 --> 00:23:01,520
run,

580
00:23:01,520 --> 00:23:02,320
terraform,

581
00:23:02,320 --> 00:23:03,120
action,

582
00:23:03,120 --> 00:23:03,520
so,

583
00:23:03,520 --> 00:23:03,920
because then,

584
00:23:03,920 --> 00:23:04,920
we get updated,

585
00:23:04,920 --> 00:23:08,120
that this conditional run,

586
00:23:08,120 --> 00:23:08,920
is then,

587
00:23:08,920 --> 00:23:10,120
in the working directory,

588
00:23:10,120 --> 00:23:11,720
which is specified,

589
00:23:11,720 --> 00:23:12,520
up here,

590
00:23:12,520 --> 00:23:13,320
and then we can take,

591
00:23:13,320 --> 00:23:14,520
and sync it out,

592
00:23:14,520 --> 00:23:15,320
then we can take,

593
00:23:15,320 --> 00:23:16,120
and then,

594
00:23:16,120 --> 00:23:17,120
try to change,

595
00:23:17,120 --> 00:23:17,920
again,

596
00:23:17,920 --> 00:23:19,520
that we have a change,

597
00:23:19,520 --> 00:23:20,720
in mine,

598
00:23:20,720 --> 00:23:22,120
to our file,

599
00:23:22,120 --> 00:23:23,320
destroy,

600
00:23:23,320 --> 00:23:24,720
we save it,

601
00:23:24,720 --> 00:23:25,720
go to the source console,

602
00:23:25,720 --> 00:23:26,720
destroy,

603
00:23:26,720 --> 00:23:27,520
like that,

604
00:23:27,520 --> 00:23:28,720
commit it,

605
00:23:28,720 --> 00:23:29,720
sync it,

606
00:23:29,720 --> 00:23:32,120
then we go to our workflow,

607
00:23:32,120 --> 00:23:32,920
if something happens,

608
00:23:32,920 --> 00:23:34,120
under GitHub Actions,

609
00:23:34,120 --> 00:23:35,920
that we have got a new destroy,

610
00:23:35,920 --> 00:23:37,920
we would perhaps have called it a destroy v2,

611
00:23:37,920 --> 00:23:38,720
just because we,

612
00:23:38,720 --> 00:23:39,120
if something happens,

613
00:23:39,120 --> 00:23:41,120
that a new one is being initiated,

614
00:23:41,120 --> 00:23:42,720
then we can look at this,

615
00:23:42,720 --> 00:23:43,720
deployment,

616
00:23:43,720 --> 00:23:44,920
what actually happens,

617
00:23:44,920 --> 00:23:45,720
by clicking on it,

618
00:23:45,720 --> 00:23:47,320
then we just let it go,

619
00:23:47,320 --> 00:23:48,320
then something can happen,

620
00:23:48,320 --> 00:23:49,720
what is interesting here now,

621
00:23:49,720 --> 00:23:50,720
what it is,

622
00:23:50,720 --> 00:23:52,720
Conditional Run Terraform Actions,

623
00:23:53,720 --> 00:23:55,720
I'm going to take a look at this,

624
00:23:55,720 --> 00:23:57,720
please upgrade using environment files,

625
00:23:57,720 --> 00:23:58,720
for the output,

626
00:23:58,720 --> 00:23:59,720
then we take and do it,

627
00:23:59,720 --> 00:24:00,720
and here,

628
00:24:00,720 --> 00:24:01,720
we see that now,

629
00:24:01,720 --> 00:24:02,720
it does something,

630
00:24:02,720 --> 00:24:05,720
based on the conditional rules,

631
00:24:05,720 --> 00:24:07,720
or the input it gets,

632
00:24:07,720 --> 00:24:08,720
and then we see here,

633
00:24:08,720 --> 00:24:09,720
that now,

634
00:24:09,720 --> 00:24:10,720
a plan lag,

635
00:24:10,720 --> 00:24:12,720
and destroy four resources,

636
00:24:12,720 --> 00:24:14,720
so then we have now set up,

637
00:24:14,720 --> 00:24:17,720
a GitHub repository,

638
00:24:17,720 --> 00:24:20,720
with a resource,

639
00:24:20,720 --> 00:24:21,720
which is deployed,

640
00:24:21,720 --> 00:24:22,720
which we want to deploy,

641
00:24:22,720 --> 00:24:23,720
and then we have prepared,

642
00:24:23,720 --> 00:24:25,720
a workflow for this one,

643
00:24:25,720 --> 00:24:26,720
which will then be initiated,

644
00:24:26,720 --> 00:24:28,720
based on the changes,

645
00:24:28,720 --> 00:24:30,720
into this file structure,

646
00:24:30,720 --> 00:24:32,720
and then delete it,

647
00:24:32,720 --> 00:24:34,720
by getting the input message,

648
00:24:34,720 --> 00:24:35,720
destroy,

649
00:24:35,720 --> 00:24:36,720
so then we have,

650
00:24:36,720 --> 00:24:37,720
tested the first GitHub action,

651
00:24:37,720 --> 00:24:39,720
looked at different conditions,

652
00:24:39,720 --> 00:24:40,720
both manually,

653
00:24:40,720 --> 00:24:41,720
and not least,

654
00:24:41,720 --> 00:24:42,720
with input,

655
00:24:42,720 --> 00:24:43,720
through the commit message,

656
00:24:43,720 --> 00:24:45,720
and we have then deployed,

657
00:24:45,720 --> 00:24:46,720
and then the website comes up,

658
00:24:46,720 --> 00:24:47,720
and now destroy,

659
00:24:47,720 --> 00:24:48,720
and then the website is gone,

660
00:24:48,720 --> 00:24:49,720
so then we can check here,

661
00:24:49,720 --> 00:24:51,720
that when it is running,

662
00:24:51,720 --> 00:24:52,720
we can go to the portal,

663
00:24:52,720 --> 00:24:53,720
then we see,

664
00:24:53,720 --> 00:24:54,720
it is running,

665
00:24:54,720 --> 00:24:55,720
job completed,

666
00:24:55,720 --> 00:24:56,720
it is done,

667
00:24:56,720 --> 00:24:57,720
cleaning up,

668
00:24:57,720 --> 00:24:58,720
then we can see here,

669
00:24:58,720 --> 00:25:00,720
under conditional,

670
00:25:00,720 --> 00:25:01,720
that it has destroyed,

671
00:25:01,720 --> 00:25:02,720
destroyed, destroyed, destroyed,

672
00:25:02,720 --> 00:25:03,720
destroyed,

673
00:25:03,720 --> 00:25:05,720
and everything is done,

674
00:25:05,720 --> 00:25:06,720
destroyed completed,

675
00:25:06,720 --> 00:25:08,720
we see in the resource group,

676
00:25:08,720 --> 00:25:10,720
that it is now destroyed,

677
00:25:10,720 --> 00:25:11,720
what is important to think about now,

678
00:25:11,720 --> 00:25:13,720
so now we have a command,

679
00:25:13,720 --> 00:25:14,720
or a comment,

680
00:25:14,720 --> 00:25:15,720
which is called destroy,

681
00:25:15,720 --> 00:25:16,720
if I remove it,

682
00:25:16,720 --> 00:25:17,720
create a file,

683
00:25:17,720 --> 00:25:18,720
commit it again,

684
00:25:18,720 --> 00:25:19,720
then it will update,

685
00:25:19,720 --> 00:25:21,720
these resources,

686
00:25:21,720 --> 00:25:22,720
so now,

687
00:25:22,720 --> 00:25:23,720
this is just a way to show,

688
00:25:23,720 --> 00:25:26,720
how we then trigger this,

689
00:25:26,720 --> 00:25:27,720
it is just to show,

690
00:25:27,720 --> 00:25:29,720
now how we use a trigger,

691
00:25:29,720 --> 00:25:30,720
and how it works,

692
00:25:30,720 --> 00:25:31,720
with for example,

693
00:25:31,720 --> 00:25:32,720
a commit message,

694
00:25:32,720 --> 00:25:35,720
so the next time,

695
00:25:35,720 --> 00:25:36,720
we create a commit,

696
00:25:36,720 --> 00:25:37,720
and push it here,

697
00:25:37,720 --> 00:25:38,720
to the repository,

698
00:25:38,720 --> 00:25:39,720
then it will of course,

699
00:25:39,720 --> 00:25:40,720
be updated,

700
00:25:40,720 --> 00:25:41,720
and then we should of course,

701
00:25:41,720 --> 00:25:43,720
remove this destroy,

702
00:25:43,720 --> 00:25:44,720
comment,

703
00:25:44,720 --> 00:25:45,720
so it is just a simple way,

704
00:25:45,720 --> 00:25:46,720
to show,

705
00:25:46,720 --> 00:25:48,720
that now this is destroyed,

706
00:25:48,720 --> 00:25:49,720
so this static website,

707
00:25:49,720 --> 00:25:52,720
does not exist in Azure,

708
00:25:52,720 --> 00:25:53,720
but if I remove this now,

709
00:25:53,720 --> 00:25:54,720
start making some changes,

710
00:25:54,720 --> 00:25:55,720
create it,

711
00:25:55,720 --> 00:25:56,720
and then I do not have,

712
00:25:56,720 --> 00:25:57,720
destroy flag,

713
00:25:57,720 --> 00:25:58,720
put in my code,

714
00:25:58,720 --> 00:26:01,720
then it is running in Azure,

715
00:26:01,720 --> 00:26:02,720
so that was it,

716
00:26:02,720 --> 00:26:03,720
bought,

717
00:26:03,720 --> 00:26:04,720
or bought and bought,

718
00:26:04,720 --> 00:26:05,720
a little longer video,

719
00:26:05,720 --> 00:26:06,720
about GitHub Action,

720
00:26:06,720 --> 00:26:07,720
this time.

